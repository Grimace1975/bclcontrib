#region License
/*
The MIT License

Copyright (c) 2008 Sky Morey

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
#endregion
using System.IO;
namespace System.Interop.Cuda
{
    using z = PtxOpCode;
    using a = PtxEmitterExtentions.AdjustPack;
    public partial class PtxEmitter
    {
        internal static void EmitDataMovementAndConversionInstruction(TextWriter w, PtxInstruction instruction)
        {
            string text;
            var opCode = instruction.OpCode;
            switch (opCode)
            {
                // mov
                case z.mov_pred: text = "mov.pred"; break;
                case z.mov_b16: text = "mov.b16"; break;
                case z.mov_b32: text = "mov.b32"; break;
                case z.mov_b64: text = "mov.b64"; break;
                case z.mov_u16: text = "mov.u16"; break;
                case z.mov_u32: text = "mov.u32"; break;
                case z.mov_u64: text = "mov.u64"; break;
                case z.mov_s16: text = "mov.s16"; break;
                case z.mov_s32: text = "mov.s32"; break;
                case z.mov_s64: text = "mov.s64"; break;
                case z.mov_f32: text = "mov.f32"; break;
                case z.mov_f64: text = "mov.f64"; break;

                // ld
                case z.ld_const_b8: text = "ld.const.b8"; break;
                case z.ld_const_b16: text = "ld.const.b16"; break;
                case z.ld_const_b32: text = "ld.const.b32"; break;
                case z.ld_const_b64: text = "ld.const.b64"; break;
                case z.ld_const_u8: text = "ld.const.u8"; break;
                case z.ld_const_u16: text = "ld.const.u16"; break;
                case z.ld_const_u32: text = "ld.const.u32"; break;
                case z.ld_const_u64: text = "ld.const.u64"; break;
                case z.ld_const_s8: text = "ld.const.s8"; break;
                case z.ld_const_s16: text = "ld.const.s16"; break;
                case z.ld_const_s32: text = "ld.const.s32"; break;
                case z.ld_const_s64: text = "ld.const.s64"; break;
                case z.ld_const_f32: text = "ld.const.f32"; break;
                case z.ld_const_f64: text = "ld.const.f64"; break;
                case z.ld_const_v2_b8: text = "ld.const.v2.b8"; break;
                case z.ld_const_v2_b16: text = "ld.const.v2.b16"; break;
                case z.ld_const_v2_b32: text = "ld.const.v2.b32"; break;
                case z.ld_const_v2_b64: text = "ld.const.v2.b64"; break;
                case z.ld_const_v2_u8: text = "ld.const.v2.u8"; break;
                case z.ld_const_v2_u16: text = "ld.const.v2.u16"; break;
                case z.ld_const_v2_u32: text = "ld.const.v2.u32"; break;
                case z.ld_const_v2_u64: text = "ld.const.v2.u64"; break;
                case z.ld_const_v2_s8: text = "ld.const.v2.s8"; break;
                case z.ld_const_v2_s16: text = "ld.const.v2.s16"; break;
                case z.ld_const_v2_s32: text = "ld.const.v2.s32"; break;
                case z.ld_const_v2_s64: text = "ld.const.v2.s64"; break;
                case z.ld_const_v2_f32: text = "ld.const.v2.f32"; break;
                case z.ld_const_v2_f64: text = "ld.const.v2.f64"; break;
                case z.ld_const_v4_b8: text = "ld.const.v4.b8"; break;
                case z.ld_const_v4_b16: text = "ld.const.v4.b16"; break;
                case z.ld_const_v4_b32: text = "ld.const.v4.b32"; break;
                case z.ld_const_v4_b64: text = "ld.const.v4.b64"; break;
                case z.ld_const_v4_u8: text = "ld.const.v4.u8"; break;
                case z.ld_const_v4_u16: text = "ld.const.v4.u16"; break;
                case z.ld_const_v4_u32: text = "ld.const.v4.u32"; break;
                case z.ld_const_v4_u64: text = "ld.const.v4.u64"; break;
                case z.ld_const_v4_s8: text = "ld.const.v4.s8"; break;
                case z.ld_const_v4_s16: text = "ld.const.v4.s16"; break;
                case z.ld_const_v4_s32: text = "ld.const.v4.s32"; break;
                case z.ld_const_v4_s64: text = "ld.const.v4.s64"; break;
                case z.ld_const_v4_f32: text = "ld.const.v4.f32"; break;
                case z.ld_const_v4_f64: text = "ld.const.v4.f64"; break;
                case z.ld_global_b8: text = "ld.global.b8"; break;
                case z.ld_global_b16: text = "ld.global.b16"; break;
                case z.ld_global_b32: text = "ld.global.b32"; break;
                case z.ld_global_b64: text = "ld.global.b64"; break;
                case z.ld_global_u8: text = "ld.global.u8"; break;
                case z.ld_global_u16: text = "ld.global.u16"; break;
                case z.ld_global_u32: text = "ld.global.u32"; break;
                case z.ld_global_u64: text = "ld.global.u64"; break;
                case z.ld_global_s8: text = "ld.global.s8"; break;
                case z.ld_global_s16: text = "ld.global.s16"; break;
                case z.ld_global_s32: text = "ld.global.s32"; break;
                case z.ld_global_s64: text = "ld.global.s64"; break;
                case z.ld_global_f32: text = "ld.global.f32"; break;
                case z.ld_global_f64: text = "ld.global.f64"; break;
                case z.ld_global_v2_b8: text = "ld.global.v2.b8"; break;
                case z.ld_global_v2_b16: text = "ld.global.v2.b16"; break;
                case z.ld_global_v2_b32: text = "ld.global.v2.b32"; break;
                case z.ld_global_v2_b64: text = "ld.global.v2.b64"; break;
                case z.ld_global_v2_u8: text = "ld.global.v2.u8"; break;
                case z.ld_global_v2_u16: text = "ld.global.v2.u16"; break;
                case z.ld_global_v2_u32: text = "ld.global.v2.u32"; break;
                case z.ld_global_v2_u64: text = "ld.global.v2.u64"; break;
                case z.ld_global_v2_s8: text = "ld.global.v2.s8"; break;
                case z.ld_global_v2_s16: text = "ld.global.v2.s16"; break;
                case z.ld_global_v2_s32: text = "ld.global.v2.s32"; break;
                case z.ld_global_v2_s64: text = "ld.global.v2.s64"; break;
                case z.ld_global_v2_f32: text = "ld.global.v2.f32"; break;
                case z.ld_global_v2_f64: text = "ld.global.v2.f64"; break;
                case z.ld_global_v4_b8: text = "ld.global.v4.b8"; break;
                case z.ld_global_v4_b16: text = "ld.global.v4.b16"; break;
                case z.ld_global_v4_b32: text = "ld.global.v4.b32"; break;
                case z.ld_global_v4_b64: text = "ld.global.v4.b64"; break;
                case z.ld_global_v4_u8: text = "ld.global.v4.u8"; break;
                case z.ld_global_v4_u16: text = "ld.global.v4.u16"; break;
                case z.ld_global_v4_u32: text = "ld.global.v4.u32"; break;
                case z.ld_global_v4_u64: text = "ld.global.v4.u64"; break;
                case z.ld_global_v4_s8: text = "ld.global.v4.s8"; break;
                case z.ld_global_v4_s16: text = "ld.global.v4.s16"; break;
                case z.ld_global_v4_s32: text = "ld.global.v4.s32"; break;
                case z.ld_global_v4_s64: text = "ld.global.v4.s64"; break;
                case z.ld_global_v4_f32: text = "ld.global.v4.f32"; break;
                case z.ld_global_v4_f64: text = "ld.global.v4.f64"; break;
                case z.ld_local_b8: text = "ld.local.b8"; break;
                case z.ld_local_b16: text = "ld.local.b16"; break;
                case z.ld_local_b32: text = "ld.local.b32"; break;
                case z.ld_local_b64: text = "ld.local.b64"; break;
                case z.ld_local_u8: text = "ld.local.u8"; break;
                case z.ld_local_u16: text = "ld.local.u16"; break;
                case z.ld_local_u32: text = "ld.local.u32"; break;
                case z.ld_local_u64: text = "ld.local.u64"; break;
                case z.ld_local_s8: text = "ld.local.s8"; break;
                case z.ld_local_s16: text = "ld.local.s16"; break;
                case z.ld_local_s32: text = "ld.local.s32"; break;
                case z.ld_local_s64: text = "ld.local.s64"; break;
                case z.ld_local_f32: text = "ld.local.f32"; break;
                case z.ld_local_f64: text = "ld.local.f64"; break;
                case z.ld_local_v2_b8: text = "ld.local.v2.b8"; break;
                case z.ld_local_v2_b16: text = "ld.local.v2.b16"; break;
                case z.ld_local_v2_b32: text = "ld.local.v2.b32"; break;
                case z.ld_local_v2_b64: text = "ld.local.v2.b64"; break;
                case z.ld_local_v2_u8: text = "ld.local.v2.u8"; break;
                case z.ld_local_v2_u16: text = "ld.local.v2.u16"; break;
                case z.ld_local_v2_u32: text = "ld.local.v2.u32"; break;
                case z.ld_local_v2_u64: text = "ld.local.v2.u64"; break;
                case z.ld_local_v2_s8: text = "ld.local.v2.s8"; break;
                case z.ld_local_v2_s16: text = "ld.local.v2.s16"; break;
                case z.ld_local_v2_s32: text = "ld.local.v2.s32"; break;
                case z.ld_local_v2_s64: text = "ld.local.v2.s64"; break;
                case z.ld_local_v2_f32: text = "ld.local.v2.f32"; break;
                case z.ld_local_v2_f64: text = "ld.local.v2.f64"; break;
                case z.ld_local_v4_b8: text = "ld.local.v4.b8"; break;
                case z.ld_local_v4_b16: text = "ld.local.v4.b16"; break;
                case z.ld_local_v4_b32: text = "ld.local.v4.b32"; break;
                case z.ld_local_v4_b64: text = "ld.local.v4.b64"; break;
                case z.ld_local_v4_u8: text = "ld.local.v4.u8"; break;
                case z.ld_local_v4_u16: text = "ld.local.v4.u16"; break;
                case z.ld_local_v4_u32: text = "ld.local.v4.u32"; break;
                case z.ld_local_v4_u64: text = "ld.local.v4.u64"; break;
                case z.ld_local_v4_s8: text = "ld.local.v4.s8"; break;
                case z.ld_local_v4_s16: text = "ld.local.v4.s16"; break;
                case z.ld_local_v4_s32: text = "ld.local.v4.s32"; break;
                case z.ld_local_v4_s64: text = "ld.local.v4.s64"; break;
                case z.ld_local_v4_f32: text = "ld.local.v4.f32"; break;
                case z.ld_local_v4_f64: text = "ld.local.v4.f64"; break;
                case z.ld_param_b8: text = "ld.param.b8"; break;
                case z.ld_param_b16: text = "ld.param.b16"; break;
                case z.ld_param_b32: text = "ld.param.b32"; break;
                case z.ld_param_b64: text = "ld.param.b64"; break;
                case z.ld_param_u8: text = "ld.param.u8"; break;
                case z.ld_param_u16: text = "ld.param.u16"; break;
                case z.ld_param_u32: text = "ld.param.u32"; break;
                case z.ld_param_u64: text = "ld.param.u64"; break;
                case z.ld_param_s8: text = "ld.param.s8"; break;
                case z.ld_param_s16: text = "ld.param.s16"; break;
                case z.ld_param_s32: text = "ld.param.s32"; break;
                case z.ld_param_s64: text = "ld.param.s64"; break;
                case z.ld_param_f32: text = "ld.param.f32"; break;
                case z.ld_param_f64: text = "ld.param.f64"; break;
                case z.ld_param_v2_b8: text = "ld.param.v2.b8"; break;
                case z.ld_param_v2_b16: text = "ld.param.v2.b16"; break;
                case z.ld_param_v2_b32: text = "ld.param.v2.b32"; break;
                case z.ld_param_v2_b64: text = "ld.param.v2.b64"; break;
                case z.ld_param_v2_u8: text = "ld.param.v2.u8"; break;
                case z.ld_param_v2_u16: text = "ld.param.v2.u16"; break;
                case z.ld_param_v2_u32: text = "ld.param.v2.u32"; break;
                case z.ld_param_v2_u64: text = "ld.param.v2.u64"; break;
                case z.ld_param_v2_s8: text = "ld.param.v2.s8"; break;
                case z.ld_param_v2_s16: text = "ld.param.v2.s16"; break;
                case z.ld_param_v2_s32: text = "ld.param.v2.s32"; break;
                case z.ld_param_v2_s64: text = "ld.param.v2.s64"; break;
                case z.ld_param_v2_f32: text = "ld.param.v2.f32"; break;
                case z.ld_param_v2_f64: text = "ld.param.v2.f64"; break;
                case z.ld_param_v4_b8: text = "ld.param.v4.b8"; break;
                case z.ld_param_v4_b16: text = "ld.param.v4.b16"; break;
                case z.ld_param_v4_b32: text = "ld.param.v4.b32"; break;
                case z.ld_param_v4_b64: text = "ld.param.v4.b64"; break;
                case z.ld_param_v4_u8: text = "ld.param.v4.u8"; break;
                case z.ld_param_v4_u16: text = "ld.param.v4.u16"; break;
                case z.ld_param_v4_u32: text = "ld.param.v4.u32"; break;
                case z.ld_param_v4_u64: text = "ld.param.v4.u64"; break;
                case z.ld_param_v4_s8: text = "ld.param.v4.s8"; break;
                case z.ld_param_v4_s16: text = "ld.param.v4.s16"; break;
                case z.ld_param_v4_s32: text = "ld.param.v4.s32"; break;
                case z.ld_param_v4_s64: text = "ld.param.v4.s64"; break;
                case z.ld_param_v4_f32: text = "ld.param.v4.f32"; break;
                case z.ld_param_v4_f64: text = "ld.param.v4.f64"; break;
                case z.ld_shared_b8: text = "ld.shared.b8"; break;
                case z.ld_shared_b16: text = "ld.shared.b16"; break;
                case z.ld_shared_b32: text = "ld.shared.b32"; break;
                case z.ld_shared_b64: text = "ld.shared.b64"; break;
                case z.ld_shared_u8: text = "ld.shared.u8"; break;
                case z.ld_shared_u16: text = "ld.shared.u16"; break;
                case z.ld_shared_u32: text = "ld.shared.u32"; break;
                case z.ld_shared_u64: text = "ld.shared.u64"; break;
                case z.ld_shared_s8: text = "ld.shared.s8"; break;
                case z.ld_shared_s16: text = "ld.shared.s16"; break;
                case z.ld_shared_s32: text = "ld.shared.s32"; break;
                case z.ld_shared_s64: text = "ld.shared.s64"; break;
                case z.ld_shared_f32: text = "ld.shared.f32"; break;
                case z.ld_shared_f64: text = "ld.shared.f64"; break;
                case z.ld_shared_v2_b8: text = "ld.shared.v2.b8"; break;
                case z.ld_shared_v2_b16: text = "ld.shared.v2.b16"; break;
                case z.ld_shared_v2_b32: text = "ld.shared.v2.b32"; break;
                case z.ld_shared_v2_b64: text = "ld.shared.v2.b64"; break;
                case z.ld_shared_v2_u8: text = "ld.shared.v2.u8"; break;
                case z.ld_shared_v2_u16: text = "ld.shared.v2.u16"; break;
                case z.ld_shared_v2_u32: text = "ld.shared.v2.u32"; break;
                case z.ld_shared_v2_u64: text = "ld.shared.v2.u64"; break;
                case z.ld_shared_v2_s8: text = "ld.shared.v2.s8"; break;
                case z.ld_shared_v2_s16: text = "ld.shared.v2.s16"; break;
                case z.ld_shared_v2_s32: text = "ld.shared.v2.s32"; break;
                case z.ld_shared_v2_s64: text = "ld.shared.v2.s64"; break;
                case z.ld_shared_v2_f32: text = "ld.shared.v2.f32"; break;
                case z.ld_shared_v2_f64: text = "ld.shared.v2.f64"; break;
                case z.ld_shared_v4_b8: text = "ld.shared.v4.b8"; break;
                case z.ld_shared_v4_b16: text = "ld.shared.v4.b16"; break;
                case z.ld_shared_v4_b32: text = "ld.shared.v4.b32"; break;
                case z.ld_shared_v4_b64: text = "ld.shared.v4.b64"; break;
                case z.ld_shared_v4_u8: text = "ld.shared.v4.u8"; break;
                case z.ld_shared_v4_u16: text = "ld.shared.v4.u16"; break;
                case z.ld_shared_v4_u32: text = "ld.shared.v4.u32"; break;
                case z.ld_shared_v4_u64: text = "ld.shared.v4.u64"; break;
                case z.ld_shared_v4_s8: text = "ld.shared.v4.s8"; break;
                case z.ld_shared_v4_s16: text = "ld.shared.v4.s16"; break;
                case z.ld_shared_v4_s32: text = "ld.shared.v4.s32"; break;
                case z.ld_shared_v4_s64: text = "ld.shared.v4.s64"; break;
                case z.ld_shared_v4_f32: text = "ld.shared.v4.f32"; break;
                case z.ld_shared_v4_f64: text = "ld.shared.v4.f64"; break;
                // {volatile}
                case z.ld_volatile_const_b8: text = "ld.volatile.const.b8"; break;
                case z.ld_volatile_const_b16: text = "ld.volatile.const.b16"; break;
                case z.ld_volatile_const_b32: text = "ld.volatile.const.b32"; break;
                case z.ld_volatile_const_b64: text = "ld.volatile.const.b64"; break;
                case z.ld_volatile_const_u8: text = "ld.volatile.const.u8"; break;
                case z.ld_volatile_const_u16: text = "ld.volatile.const.u16"; break;
                case z.ld_volatile_const_u32: text = "ld.volatile.const.u32"; break;
                case z.ld_volatile_const_u64: text = "ld.volatile.const.u64"; break;
                case z.ld_volatile_const_s8: text = "ld.volatile.const.s8"; break;
                case z.ld_volatile_const_s16: text = "ld.volatile.const.s16"; break;
                case z.ld_volatile_const_s32: text = "ld.volatile.const.s32"; break;
                case z.ld_volatile_const_s64: text = "ld.volatile.const.s64"; break;
                case z.ld_volatile_const_f32: text = "ld.volatile.const.f32"; break;
                case z.ld_volatile_const_f64: text = "ld.volatile.const.f64"; break;
                case z.ld_volatile_const_v2_b8: text = "ld.volatile.const.v2.b8"; break;
                case z.ld_volatile_const_v2_b16: text = "ld.volatile.const.v2.b16"; break;
                case z.ld_volatile_const_v2_b32: text = "ld.volatile.const.v2.b32"; break;
                case z.ld_volatile_const_v2_b64: text = "ld.volatile.const.v2.b64"; break;
                case z.ld_volatile_const_v2_u8: text = "ld.volatile.const.v2.u8"; break;
                case z.ld_volatile_const_v2_u16: text = "ld.volatile.const.v2.u16"; break;
                case z.ld_volatile_const_v2_u32: text = "ld.volatile.const.v2.u32"; break;
                case z.ld_volatile_const_v2_u64: text = "ld.volatile.const.v2.u64"; break;
                case z.ld_volatile_const_v2_s8: text = "ld.volatile.const.v2.s8"; break;
                case z.ld_volatile_const_v2_s16: text = "ld.volatile.const.v2.s16"; break;
                case z.ld_volatile_const_v2_s32: text = "ld.volatile.const.v2.s32"; break;
                case z.ld_volatile_const_v2_s64: text = "ld.volatile.const.v2.s64"; break;
                case z.ld_volatile_const_v2_f32: text = "ld.volatile.const.v2.f32"; break;
                case z.ld_volatile_const_v2_f64: text = "ld.volatile.const.v2.f64"; break;
                case z.ld_volatile_const_v4_b8: text = "ld.volatile.const.v4.b8"; break;
                case z.ld_volatile_const_v4_b16: text = "ld.volatile.const.v4.b16"; break;
                case z.ld_volatile_const_v4_b32: text = "ld.volatile.const.v4.b32"; break;
                case z.ld_volatile_const_v4_b64: text = "ld.volatile.const.v4.b64"; break;
                case z.ld_volatile_const_v4_u8: text = "ld.volatile.const.v4.u8"; break;
                case z.ld_volatile_const_v4_u16: text = "ld.volatile.const.v4.u16"; break;
                case z.ld_volatile_const_v4_u32: text = "ld.volatile.const.v4.u32"; break;
                case z.ld_volatile_const_v4_u64: text = "ld.volatile.const.v4.u64"; break;
                case z.ld_volatile_const_v4_s8: text = "ld.volatile.const.v4.s8"; break;
                case z.ld_volatile_const_v4_s16: text = "ld.volatile.const.v4.s16"; break;
                case z.ld_volatile_const_v4_s32: text = "ld.volatile.const.v4.s32"; break;
                case z.ld_volatile_const_v4_s64: text = "ld.volatile.const.v4.s64"; break;
                case z.ld_volatile_const_v4_f32: text = "ld.volatile.const.v4.f32"; break;
                case z.ld_volatile_const_v4_f64: text = "ld.volatile.const.v4.f64"; break;
                case z.ld_volatile_global_b8: text = "ld.volatile.global.b8"; break;
                case z.ld_volatile_global_b16: text = "ld.volatile.global.b16"; break;
                case z.ld_volatile_global_b32: text = "ld.volatile.global.b32"; break;
                case z.ld_volatile_global_b64: text = "ld.volatile.global.b64"; break;
                case z.ld_volatile_global_u8: text = "ld.volatile.global.u8"; break;
                case z.ld_volatile_global_u16: text = "ld.volatile.global.u16"; break;
                case z.ld_volatile_global_u32: text = "ld.volatile.global.u32"; break;
                case z.ld_volatile_global_u64: text = "ld.volatile.global.u64"; break;
                case z.ld_volatile_global_s8: text = "ld.volatile.global.s8"; break;
                case z.ld_volatile_global_s16: text = "ld.volatile.global.s16"; break;
                case z.ld_volatile_global_s32: text = "ld.volatile.global.s32"; break;
                case z.ld_volatile_global_s64: text = "ld.volatile.global.s64"; break;
                case z.ld_volatile_global_f32: text = "ld.volatile.global.f32"; break;
                case z.ld_volatile_global_f64: text = "ld.volatile.global.f64"; break;
                case z.ld_volatile_global_v2_b8: text = "ld.volatile.global.v2.b8"; break;
                case z.ld_volatile_global_v2_b16: text = "ld.volatile.global.v2.b16"; break;
                case z.ld_volatile_global_v2_b32: text = "ld.volatile.global.v2.b32"; break;
                case z.ld_volatile_global_v2_b64: text = "ld.volatile.global.v2.b64"; break;
                case z.ld_volatile_global_v2_u8: text = "ld.volatile.global.v2.u8"; break;
                case z.ld_volatile_global_v2_u16: text = "ld.volatile.global.v2.u16"; break;
                case z.ld_volatile_global_v2_u32: text = "ld.volatile.global.v2.u32"; break;
                case z.ld_volatile_global_v2_u64: text = "ld.volatile.global.v2.u64"; break;
                case z.ld_volatile_global_v2_s8: text = "ld.volatile.global.v2.s8"; break;
                case z.ld_volatile_global_v2_s16: text = "ld.volatile.global.v2.s16"; break;
                case z.ld_volatile_global_v2_s32: text = "ld.volatile.global.v2.s32"; break;
                case z.ld_volatile_global_v2_s64: text = "ld.volatile.global.v2.s64"; break;
                case z.ld_volatile_global_v2_f32: text = "ld.volatile.global.v2.f32"; break;
                case z.ld_volatile_global_v2_f64: text = "ld.volatile.global.v2.f64"; break;
                case z.ld_volatile_global_v4_b8: text = "ld.volatile.global.v4.b8"; break;
                case z.ld_volatile_global_v4_b16: text = "ld.volatile.global.v4.b16"; break;
                case z.ld_volatile_global_v4_b32: text = "ld.volatile.global.v4.b32"; break;
                case z.ld_volatile_global_v4_b64: text = "ld.volatile.global.v4.b64"; break;
                case z.ld_volatile_global_v4_u8: text = "ld.volatile.global.v4.u8"; break;
                case z.ld_volatile_global_v4_u16: text = "ld.volatile.global.v4.u16"; break;
                case z.ld_volatile_global_v4_u32: text = "ld.volatile.global.v4.u32"; break;
                case z.ld_volatile_global_v4_u64: text = "ld.volatile.global.v4.u64"; break;
                case z.ld_volatile_global_v4_s8: text = "ld.volatile.global.v4.s8"; break;
                case z.ld_volatile_global_v4_s16: text = "ld.volatile.global.v4.s16"; break;
                case z.ld_volatile_global_v4_s32: text = "ld.volatile.global.v4.s32"; break;
                case z.ld_volatile_global_v4_s64: text = "ld.volatile.global.v4.s64"; break;
                case z.ld_volatile_global_v4_f32: text = "ld.volatile.global.v4.f32"; break;
                case z.ld_volatile_global_v4_f64: text = "ld.volatile.global.v4.f64"; break;
                case z.ld_volatile_local_b8: text = "ld.volatile.local.b8"; break;
                case z.ld_volatile_local_b16: text = "ld.volatile.local.b16"; break;
                case z.ld_volatile_local_b32: text = "ld.volatile.local.b32"; break;
                case z.ld_volatile_local_b64: text = "ld.volatile.local.b64"; break;
                case z.ld_volatile_local_u8: text = "ld.volatile.local.u8"; break;
                case z.ld_volatile_local_u16: text = "ld.volatile.local.u16"; break;
                case z.ld_volatile_local_u32: text = "ld.volatile.local.u32"; break;
                case z.ld_volatile_local_u64: text = "ld.volatile.local.u64"; break;
                case z.ld_volatile_local_s8: text = "ld.volatile.local.s8"; break;
                case z.ld_volatile_local_s16: text = "ld.volatile.local.s16"; break;
                case z.ld_volatile_local_s32: text = "ld.volatile.local.s32"; break;
                case z.ld_volatile_local_s64: text = "ld.volatile.local.s64"; break;
                case z.ld_volatile_local_f32: text = "ld.volatile.local.f32"; break;
                case z.ld_volatile_local_f64: text = "ld.volatile.local.f64"; break;
                case z.ld_volatile_local_v2_b8: text = "ld.volatile.local.v2.b8"; break;
                case z.ld_volatile_local_v2_b16: text = "ld.volatile.local.v2.b16"; break;
                case z.ld_volatile_local_v2_b32: text = "ld.volatile.local.v2.b32"; break;
                case z.ld_volatile_local_v2_b64: text = "ld.volatile.local.v2.b64"; break;
                case z.ld_volatile_local_v2_u8: text = "ld.volatile.local.v2.u8"; break;
                case z.ld_volatile_local_v2_u16: text = "ld.volatile.local.v2.u16"; break;
                case z.ld_volatile_local_v2_u32: text = "ld.volatile.local.v2.u32"; break;
                case z.ld_volatile_local_v2_u64: text = "ld.volatile.local.v2.u64"; break;
                case z.ld_volatile_local_v2_s8: text = "ld.volatile.local.v2.s8"; break;
                case z.ld_volatile_local_v2_s16: text = "ld.volatile.local.v2.s16"; break;
                case z.ld_volatile_local_v2_s32: text = "ld.volatile.local.v2.s32"; break;
                case z.ld_volatile_local_v2_s64: text = "ld.volatile.local.v2.s64"; break;
                case z.ld_volatile_local_v2_f32: text = "ld.volatile.local.v2.f32"; break;
                case z.ld_volatile_local_v2_f64: text = "ld.volatile.local.v2.f64"; break;
                case z.ld_volatile_local_v4_b8: text = "ld.volatile.local.v4.b8"; break;
                case z.ld_volatile_local_v4_b16: text = "ld.volatile.local.v4.b16"; break;
                case z.ld_volatile_local_v4_b32: text = "ld.volatile.local.v4.b32"; break;
                case z.ld_volatile_local_v4_b64: text = "ld.volatile.local.v4.b64"; break;
                case z.ld_volatile_local_v4_u8: text = "ld.volatile.local.v4.u8"; break;
                case z.ld_volatile_local_v4_u16: text = "ld.volatile.local.v4.u16"; break;
                case z.ld_volatile_local_v4_u32: text = "ld.volatile.local.v4.u32"; break;
                case z.ld_volatile_local_v4_u64: text = "ld.volatile.local.v4.u64"; break;
                case z.ld_volatile_local_v4_s8: text = "ld.volatile.local.v4.s8"; break;
                case z.ld_volatile_local_v4_s16: text = "ld.volatile.local.v4.s16"; break;
                case z.ld_volatile_local_v4_s32: text = "ld.volatile.local.v4.s32"; break;
                case z.ld_volatile_local_v4_s64: text = "ld.volatile.local.v4.s64"; break;
                case z.ld_volatile_local_v4_f32: text = "ld.volatile.local.v4.f32"; break;
                case z.ld_volatile_local_v4_f64: text = "ld.volatile.local.v4.f64"; break;
                case z.ld_volatile_param_b8: text = "ld.volatile.param.b8"; break;
                case z.ld_volatile_param_b16: text = "ld.volatile.param.b16"; break;
                case z.ld_volatile_param_b32: text = "ld.volatile.param.b32"; break;
                case z.ld_volatile_param_b64: text = "ld.volatile.param.b64"; break;
                case z.ld_volatile_param_u8: text = "ld.volatile.param.u8"; break;
                case z.ld_volatile_param_u16: text = "ld.volatile.param.u16"; break;
                case z.ld_volatile_param_u32: text = "ld.volatile.param.u32"; break;
                case z.ld_volatile_param_u64: text = "ld.volatile.param.u64"; break;
                case z.ld_volatile_param_s8: text = "ld.volatile.param.s8"; break;
                case z.ld_volatile_param_s16: text = "ld.volatile.param.s16"; break;
                case z.ld_volatile_param_s32: text = "ld.volatile.param.s32"; break;
                case z.ld_volatile_param_s64: text = "ld.volatile.param.s64"; break;
                case z.ld_volatile_param_f32: text = "ld.volatile.param.f32"; break;
                case z.ld_volatile_param_f64: text = "ld.volatile.param.f64"; break;
                case z.ld_volatile_param_v2_b8: text = "ld.volatile.param.v2.b8"; break;
                case z.ld_volatile_param_v2_b16: text = "ld.volatile.param.v2.b16"; break;
                case z.ld_volatile_param_v2_b32: text = "ld.volatile.param.v2.b32"; break;
                case z.ld_volatile_param_v2_b64: text = "ld.volatile.param.v2.b64"; break;
                case z.ld_volatile_param_v2_u8: text = "ld.volatile.param.v2.u8"; break;
                case z.ld_volatile_param_v2_u16: text = "ld.volatile.param.v2.u16"; break;
                case z.ld_volatile_param_v2_u32: text = "ld.volatile.param.v2.u32"; break;
                case z.ld_volatile_param_v2_u64: text = "ld.volatile.param.v2.u64"; break;
                case z.ld_volatile_param_v2_s8: text = "ld.volatile.param.v2.s8"; break;
                case z.ld_volatile_param_v2_s16: text = "ld.volatile.param.v2.s16"; break;
                case z.ld_volatile_param_v2_s32: text = "ld.volatile.param.v2.s32"; break;
                case z.ld_volatile_param_v2_s64: text = "ld.volatile.param.v2.s64"; break;
                case z.ld_volatile_param_v2_f32: text = "ld.volatile.param.v2.f32"; break;
                case z.ld_volatile_param_v2_f64: text = "ld.volatile.param.v2.f64"; break;
                case z.ld_volatile_param_v4_b8: text = "ld.volatile.param.v4.b8"; break;
                case z.ld_volatile_param_v4_b16: text = "ld.volatile.param.v4.b16"; break;
                case z.ld_volatile_param_v4_b32: text = "ld.volatile.param.v4.b32"; break;
                case z.ld_volatile_param_v4_b64: text = "ld.volatile.param.v4.b64"; break;
                case z.ld_volatile_param_v4_u8: text = "ld.volatile.param.v4.u8"; break;
                case z.ld_volatile_param_v4_u16: text = "ld.volatile.param.v4.u16"; break;
                case z.ld_volatile_param_v4_u32: text = "ld.volatile.param.v4.u32"; break;
                case z.ld_volatile_param_v4_u64: text = "ld.volatile.param.v4.u64"; break;
                case z.ld_volatile_param_v4_s8: text = "ld.volatile.param.v4.s8"; break;
                case z.ld_volatile_param_v4_s16: text = "ld.volatile.param.v4.s16"; break;
                case z.ld_volatile_param_v4_s32: text = "ld.volatile.param.v4.s32"; break;
                case z.ld_volatile_param_v4_s64: text = "ld.volatile.param.v4.s64"; break;
                case z.ld_volatile_param_v4_f32: text = "ld.volatile.param.v4.f32"; break;
                case z.ld_volatile_param_v4_f64: text = "ld.volatile.param.v4.f64"; break;
                case z.ld_volatile_shared_b8: text = "ld.volatile.shared.b8"; break;
                case z.ld_volatile_shared_b16: text = "ld.volatile.shared.b16"; break;
                case z.ld_volatile_shared_b32: text = "ld.volatile.shared.b32"; break;
                case z.ld_volatile_shared_b64: text = "ld.volatile.shared.b64"; break;
                case z.ld_volatile_shared_u8: text = "ld.volatile.shared.u8"; break;
                case z.ld_volatile_shared_u16: text = "ld.volatile.shared.u16"; break;
                case z.ld_volatile_shared_u32: text = "ld.volatile.shared.u32"; break;
                case z.ld_volatile_shared_u64: text = "ld.volatile.shared.u64"; break;
                case z.ld_volatile_shared_s8: text = "ld.volatile.shared.s8"; break;
                case z.ld_volatile_shared_s16: text = "ld.volatile.shared.s16"; break;
                case z.ld_volatile_shared_s32: text = "ld.volatile.shared.s32"; break;
                case z.ld_volatile_shared_s64: text = "ld.volatile.shared.s64"; break;
                case z.ld_volatile_shared_f32: text = "ld.volatile.shared.f32"; break;
                case z.ld_volatile_shared_f64: text = "ld.volatile.shared.f64"; break;
                case z.ld_volatile_shared_v2_b8: text = "ld.volatile.shared.v2.b8"; break;
                case z.ld_volatile_shared_v2_b16: text = "ld.volatile.shared.v2.b16"; break;
                case z.ld_volatile_shared_v2_b32: text = "ld.volatile.shared.v2.b32"; break;
                case z.ld_volatile_shared_v2_b64: text = "ld.volatile.shared.v2.b64"; break;
                case z.ld_volatile_shared_v2_u8: text = "ld.volatile.shared.v2.u8"; break;
                case z.ld_volatile_shared_v2_u16: text = "ld.volatile.shared.v2.u16"; break;
                case z.ld_volatile_shared_v2_u32: text = "ld.volatile.shared.v2.u32"; break;
                case z.ld_volatile_shared_v2_u64: text = "ld.volatile.shared.v2.u64"; break;
                case z.ld_volatile_shared_v2_s8: text = "ld.volatile.shared.v2.s8"; break;
                case z.ld_volatile_shared_v2_s16: text = "ld.volatile.shared.v2.s16"; break;
                case z.ld_volatile_shared_v2_s32: text = "ld.volatile.shared.v2.s32"; break;
                case z.ld_volatile_shared_v2_s64: text = "ld.volatile.shared.v2.s64"; break;
                case z.ld_volatile_shared_v2_f32: text = "ld.volatile.shared.v2.f32"; break;
                case z.ld_volatile_shared_v2_f64: text = "ld.volatile.shared.v2.f64"; break;
                case z.ld_volatile_shared_v4_b8: text = "ld.volatile.shared.v4.b8"; break;
                case z.ld_volatile_shared_v4_b16: text = "ld.volatile.shared.v4.b16"; break;
                case z.ld_volatile_shared_v4_b32: text = "ld.volatile.shared.v4.b32"; break;
                case z.ld_volatile_shared_v4_b64: text = "ld.volatile.shared.v4.b64"; break;
                case z.ld_volatile_shared_v4_u8: text = "ld.volatile.shared.v4.u8"; break;
                case z.ld_volatile_shared_v4_u16: text = "ld.volatile.shared.v4.u16"; break;
                case z.ld_volatile_shared_v4_u32: text = "ld.volatile.shared.v4.u32"; break;
                case z.ld_volatile_shared_v4_u64: text = "ld.volatile.shared.v4.u64"; break;
                case z.ld_volatile_shared_v4_s8: text = "ld.volatile.shared.v4.s8"; break;
                case z.ld_volatile_shared_v4_s16: text = "ld.volatile.shared.v4.s16"; break;
                case z.ld_volatile_shared_v4_s32: text = "ld.volatile.shared.v4.s32"; break;
                case z.ld_volatile_shared_v4_s64: text = "ld.volatile.shared.v4.s64"; break;
                case z.ld_volatile_shared_v4_f32: text = "ld.volatile.shared.v4.f32"; break;
                case z.ld_volatile_shared_v4_f64: text = "ld.volatile.shared.v4.f64"; break;

                // st
                case z.st_global_b8: text = "st.global.b8"; break;
                case z.st_global_b16: text = "st.global.b16"; break;
                case z.st_global_b32: text = "st.global.b32"; break;
                case z.st_global_b64: text = "st.global.b64"; break;
                case z.st_global_u8: text = "st.global.u8"; break;
                case z.st_global_u16: text = "st.global.u16"; break;
                case z.st_global_u32: text = "st.global.u32"; break;
                case z.st_global_u64: text = "st.global.u64"; break;
                case z.st_global_s8: text = "st.global.s8"; break;
                case z.st_global_s16: text = "st.global.s16"; break;
                case z.st_global_s32: text = "st.global.s32"; break;
                case z.st_global_s64: text = "st.global.s64"; break;
                case z.st_global_f32: text = "st.global.f32"; break;
                case z.st_global_f64: text = "st.global.f64"; break;
                case z.st_global_v2_b8: text = "st.global.v2.b8"; break;
                case z.st_global_v2_b16: text = "st.global.v2.b16"; break;
                case z.st_global_v2_b32: text = "st.global.v2.b32"; break;
                case z.st_global_v2_b64: text = "st.global.v2.b64"; break;
                case z.st_global_v2_u8: text = "st.global.v2.u8"; break;
                case z.st_global_v2_u16: text = "st.global.v2.u16"; break;
                case z.st_global_v2_u32: text = "st.global.v2.u32"; break;
                case z.st_global_v2_u64: text = "st.global.v2.u64"; break;
                case z.st_global_v2_s8: text = "st.global.v2.s8"; break;
                case z.st_global_v2_s16: text = "st.global.v2.s16"; break;
                case z.st_global_v2_s32: text = "st.global.v2.s32"; break;
                case z.st_global_v2_s64: text = "st.global.v2.s64"; break;
                case z.st_global_v2_f32: text = "st.global.v2.f32"; break;
                case z.st_global_v2_f64: text = "st.global.v2.f64"; break;
                case z.st_global_v4_b8: text = "st.global.v4.b8"; break;
                case z.st_global_v4_b16: text = "st.global.v4.b16"; break;
                case z.st_global_v4_b32: text = "st.global.v4.b32"; break;
                case z.st_global_v4_b64: text = "st.global.v4.b64"; break;
                case z.st_global_v4_u8: text = "st.global.v4.u8"; break;
                case z.st_global_v4_u16: text = "st.global.v4.u16"; break;
                case z.st_global_v4_u32: text = "st.global.v4.u32"; break;
                case z.st_global_v4_u64: text = "st.global.v4.u64"; break;
                case z.st_global_v4_s8: text = "st.global.v4.s8"; break;
                case z.st_global_v4_s16: text = "st.global.v4.s16"; break;
                case z.st_global_v4_s32: text = "st.global.v4.s32"; break;
                case z.st_global_v4_s64: text = "st.global.v4.s64"; break;
                case z.st_global_v4_f32: text = "st.global.v4.f32"; break;
                case z.st_global_v4_f64: text = "st.global.v4.f64"; break;
                case z.st_local_b8: text = "st.local.b8"; break;
                case z.st_local_b16: text = "st.local.b16"; break;
                case z.st_local_b32: text = "st.local.b32"; break;
                case z.st_local_b64: text = "st.local.b64"; break;
                case z.st_local_u8: text = "st.local.u8"; break;
                case z.st_local_u16: text = "st.local.u16"; break;
                case z.st_local_u32: text = "st.local.u32"; break;
                case z.st_local_u64: text = "st.local.u64"; break;
                case z.st_local_s8: text = "st.local.s8"; break;
                case z.st_local_s16: text = "st.local.s16"; break;
                case z.st_local_s32: text = "st.local.s32"; break;
                case z.st_local_s64: text = "st.local.s64"; break;
                case z.st_local_f32: text = "st.local.f32"; break;
                case z.st_local_f64: text = "st.local.f64"; break;
                case z.st_local_v2_b8: text = "st.local.v2.b8"; break;
                case z.st_local_v2_b16: text = "st.local.v2.b16"; break;
                case z.st_local_v2_b32: text = "st.local.v2.b32"; break;
                case z.st_local_v2_b64: text = "st.local.v2.b64"; break;
                case z.st_local_v2_u8: text = "st.local.v2.u8"; break;
                case z.st_local_v2_u16: text = "st.local.v2.u16"; break;
                case z.st_local_v2_u32: text = "st.local.v2.u32"; break;
                case z.st_local_v2_u64: text = "st.local.v2.u64"; break;
                case z.st_local_v2_s8: text = "st.local.v2.s8"; break;
                case z.st_local_v2_s16: text = "st.local.v2.s16"; break;
                case z.st_local_v2_s32: text = "st.local.v2.s32"; break;
                case z.st_local_v2_s64: text = "st.local.v2.s64"; break;
                case z.st_local_v2_f32: text = "st.local.v2.f32"; break;
                case z.st_local_v2_f64: text = "st.local.v2.f64"; break;
                case z.st_local_v4_b8: text = "st.local.v4.b8"; break;
                case z.st_local_v4_b16: text = "st.local.v4.b16"; break;
                case z.st_local_v4_b32: text = "st.local.v4.b32"; break;
                case z.st_local_v4_b64: text = "st.local.v4.b64"; break;
                case z.st_local_v4_u8: text = "st.local.v4.u8"; break;
                case z.st_local_v4_u16: text = "st.local.v4.u16"; break;
                case z.st_local_v4_u32: text = "st.local.v4.u32"; break;
                case z.st_local_v4_u64: text = "st.local.v4.u64"; break;
                case z.st_local_v4_s8: text = "st.local.v4.s8"; break;
                case z.st_local_v4_s16: text = "st.local.v4.s16"; break;
                case z.st_local_v4_s32: text = "st.local.v4.s32"; break;
                case z.st_local_v4_s64: text = "st.local.v4.s64"; break;
                case z.st_local_v4_f32: text = "st.local.v4.f32"; break;
                case z.st_local_v4_f64: text = "st.local.v4.f64"; break;
                case z.st_shared_b8: text = "st.shared.b8"; break;
                case z.st_shared_b16: text = "st.shared.b16"; break;
                case z.st_shared_b32: text = "st.shared.b32"; break;
                case z.st_shared_b64: text = "st.shared.b64"; break;
                case z.st_shared_u8: text = "st.shared.u8"; break;
                case z.st_shared_u16: text = "st.shared.u16"; break;
                case z.st_shared_u32: text = "st.shared.u32"; break;
                case z.st_shared_u64: text = "st.shared.u64"; break;
                case z.st_shared_s8: text = "st.shared.s8"; break;
                case z.st_shared_s16: text = "st.shared.s16"; break;
                case z.st_shared_s32: text = "st.shared.s32"; break;
                case z.st_shared_s64: text = "st.shared.s64"; break;
                case z.st_shared_f32: text = "st.shared.f32"; break;
                case z.st_shared_f64: text = "st.shared.f64"; break;
                case z.st_shared_v2_b8: text = "st.shared.v2.b8"; break;
                case z.st_shared_v2_b16: text = "st.shared.v2.b16"; break;
                case z.st_shared_v2_b32: text = "st.shared.v2.b32"; break;
                case z.st_shared_v2_b64: text = "st.shared.v2.b64"; break;
                case z.st_shared_v2_u8: text = "st.shared.v2.u8"; break;
                case z.st_shared_v2_u16: text = "st.shared.v2.u16"; break;
                case z.st_shared_v2_u32: text = "st.shared.v2.u32"; break;
                case z.st_shared_v2_u64: text = "st.shared.v2.u64"; break;
                case z.st_shared_v2_s8: text = "st.shared.v2.s8"; break;
                case z.st_shared_v2_s16: text = "st.shared.v2.s16"; break;
                case z.st_shared_v2_s32: text = "st.shared.v2.s32"; break;
                case z.st_shared_v2_s64: text = "st.shared.v2.s64"; break;
                case z.st_shared_v2_f32: text = "st.shared.v2.f32"; break;
                case z.st_shared_v2_f64: text = "st.shared.v2.f64"; break;
                case z.st_shared_v4_b8: text = "st.shared.v4.b8"; break;
                case z.st_shared_v4_b16: text = "st.shared.v4.b16"; break;
                case z.st_shared_v4_b32: text = "st.shared.v4.b32"; break;
                case z.st_shared_v4_b64: text = "st.shared.v4.b64"; break;
                case z.st_shared_v4_u8: text = "st.shared.v4.u8"; break;
                case z.st_shared_v4_u16: text = "st.shared.v4.u16"; break;
                case z.st_shared_v4_u32: text = "st.shared.v4.u32"; break;
                case z.st_shared_v4_u64: text = "st.shared.v4.u64"; break;
                case z.st_shared_v4_s8: text = "st.shared.v4.s8"; break;
                case z.st_shared_v4_s16: text = "st.shared.v4.s16"; break;
                case z.st_shared_v4_s32: text = "st.shared.v4.s32"; break;
                case z.st_shared_v4_s64: text = "st.shared.v4.s64"; break;
                case z.st_shared_v4_f32: text = "st.shared.v4.f32"; break;
                case z.st_shared_v4_f64: text = "st.shared.v4.f64"; break;
                // {volatile}
                case z.st_volatile_global_b8: text = "st.volatile.global.b8"; break;
                case z.st_volatile_global_b16: text = "st.volatile.global.b16"; break;
                case z.st_volatile_global_b32: text = "st.volatile.global.b32"; break;
                case z.st_volatile_global_b64: text = "st.volatile.global.b64"; break;
                case z.st_volatile_global_u8: text = "st.volatile.global.u8"; break;
                case z.st_volatile_global_u16: text = "st.volatile.global.u16"; break;
                case z.st_volatile_global_u32: text = "st.volatile.global.u32"; break;
                case z.st_volatile_global_u64: text = "st.volatile.global.u64"; break;
                case z.st_volatile_global_s8: text = "st.volatile.global.s8"; break;
                case z.st_volatile_global_s16: text = "st.volatile.global.s16"; break;
                case z.st_volatile_global_s32: text = "st.volatile.global.s32"; break;
                case z.st_volatile_global_s64: text = "st.volatile.global.s64"; break;
                case z.st_volatile_global_f32: text = "st.volatile.global.f32"; break;
                case z.st_volatile_global_f64: text = "st.volatile.global.f64"; break;
                case z.st_volatile_global_v2_b8: text = "st.volatile.global.v2.b8"; break;
                case z.st_volatile_global_v2_b16: text = "st.volatile.global.v2.b16"; break;
                case z.st_volatile_global_v2_b32: text = "st.volatile.global.v2.b32"; break;
                case z.st_volatile_global_v2_b64: text = "st.volatile.global.v2.b64"; break;
                case z.st_volatile_global_v2_u8: text = "st.volatile.global.v2.u8"; break;
                case z.st_volatile_global_v2_u16: text = "st.volatile.global.v2.u16"; break;
                case z.st_volatile_global_v2_u32: text = "st.volatile.global.v2.u32"; break;
                case z.st_volatile_global_v2_u64: text = "st.volatile.global.v2.u64"; break;
                case z.st_volatile_global_v2_s8: text = "st.volatile.global.v2.s8"; break;
                case z.st_volatile_global_v2_s16: text = "st.volatile.global.v2.s16"; break;
                case z.st_volatile_global_v2_s32: text = "st.volatile.global.v2.s32"; break;
                case z.st_volatile_global_v2_s64: text = "st.volatile.global.v2.s64"; break;
                case z.st_volatile_global_v2_f32: text = "st.volatile.global.v2.f32"; break;
                case z.st_volatile_global_v2_f64: text = "st.volatile.global.v2.f64"; break;
                case z.st_volatile_global_v4_b8: text = "st.volatile.global.v4.b8"; break;
                case z.st_volatile_global_v4_b16: text = "st.volatile.global.v4.b16"; break;
                case z.st_volatile_global_v4_b32: text = "st.volatile.global.v4.b32"; break;
                case z.st_volatile_global_v4_b64: text = "st.volatile.global.v4.b64"; break;
                case z.st_volatile_global_v4_u8: text = "st.volatile.global.v4.u8"; break;
                case z.st_volatile_global_v4_u16: text = "st.volatile.global.v4.u16"; break;
                case z.st_volatile_global_v4_u32: text = "st.volatile.global.v4.u32"; break;
                case z.st_volatile_global_v4_u64: text = "st.volatile.global.v4.u64"; break;
                case z.st_volatile_global_v4_s8: text = "st.volatile.global.v4.s8"; break;
                case z.st_volatile_global_v4_s16: text = "st.volatile.global.v4.s16"; break;
                case z.st_volatile_global_v4_s32: text = "st.volatile.global.v4.s32"; break;
                case z.st_volatile_global_v4_s64: text = "st.volatile.global.v4.s64"; break;
                case z.st_volatile_global_v4_f32: text = "st.volatile.global.v4.f32"; break;
                case z.st_volatile_global_v4_f64: text = "st.volatile.global.v4.f64"; break;
                case z.st_volatile_local_b8: text = "st.volatile.local.b8"; break;
                case z.st_volatile_local_b16: text = "st.volatile.local.b16"; break;
                case z.st_volatile_local_b32: text = "st.volatile.local.b32"; break;
                case z.st_volatile_local_b64: text = "st.volatile.local.b64"; break;
                case z.st_volatile_local_u8: text = "st.volatile.local.u8"; break;
                case z.st_volatile_local_u16: text = "st.volatile.local.u16"; break;
                case z.st_volatile_local_u32: text = "st.volatile.local.u32"; break;
                case z.st_volatile_local_u64: text = "st.volatile.local.u64"; break;
                case z.st_volatile_local_s8: text = "st.volatile.local.s8"; break;
                case z.st_volatile_local_s16: text = "st.volatile.local.s16"; break;
                case z.st_volatile_local_s32: text = "st.volatile.local.s32"; break;
                case z.st_volatile_local_s64: text = "st.volatile.local.s64"; break;
                case z.st_volatile_local_f32: text = "st.volatile.local.f32"; break;
                case z.st_volatile_local_f64: text = "st.volatile.local.f64"; break;
                case z.st_volatile_local_v2_b8: text = "st.volatile.local.v2.b8"; break;
                case z.st_volatile_local_v2_b16: text = "st.volatile.local.v2.b16"; break;
                case z.st_volatile_local_v2_b32: text = "st.volatile.local.v2.b32"; break;
                case z.st_volatile_local_v2_b64: text = "st.volatile.local.v2.b64"; break;
                case z.st_volatile_local_v2_u8: text = "st.volatile.local.v2.u8"; break;
                case z.st_volatile_local_v2_u16: text = "st.volatile.local.v2.u16"; break;
                case z.st_volatile_local_v2_u32: text = "st.volatile.local.v2.u32"; break;
                case z.st_volatile_local_v2_u64: text = "st.volatile.local.v2.u64"; break;
                case z.st_volatile_local_v2_s8: text = "st.volatile.local.v2.s8"; break;
                case z.st_volatile_local_v2_s16: text = "st.volatile.local.v2.s16"; break;
                case z.st_volatile_local_v2_s32: text = "st.volatile.local.v2.s32"; break;
                case z.st_volatile_local_v2_s64: text = "st.volatile.local.v2.s64"; break;
                case z.st_volatile_local_v2_f32: text = "st.volatile.local.v2.f32"; break;
                case z.st_volatile_local_v2_f64: text = "st.volatile.local.v2.f64"; break;
                case z.st_volatile_local_v4_b8: text = "st.volatile.local.v4.b8"; break;
                case z.st_volatile_local_v4_b16: text = "st.volatile.local.v4.b16"; break;
                case z.st_volatile_local_v4_b32: text = "st.volatile.local.v4.b32"; break;
                case z.st_volatile_local_v4_b64: text = "st.volatile.local.v4.b64"; break;
                case z.st_volatile_local_v4_u8: text = "st.volatile.local.v4.u8"; break;
                case z.st_volatile_local_v4_u16: text = "st.volatile.local.v4.u16"; break;
                case z.st_volatile_local_v4_u32: text = "st.volatile.local.v4.u32"; break;
                case z.st_volatile_local_v4_u64: text = "st.volatile.local.v4.u64"; break;
                case z.st_volatile_local_v4_s8: text = "st.volatile.local.v4.s8"; break;
                case z.st_volatile_local_v4_s16: text = "st.volatile.local.v4.s16"; break;
                case z.st_volatile_local_v4_s32: text = "st.volatile.local.v4.s32"; break;
                case z.st_volatile_local_v4_s64: text = "st.volatile.local.v4.s64"; break;
                case z.st_volatile_local_v4_f32: text = "st.volatile.local.v4.f32"; break;
                case z.st_volatile_local_v4_f64: text = "st.volatile.local.v4.f64"; break;
                case z.st_volatile_shared_b8: text = "st.volatile.shared.b8"; break;
                case z.st_volatile_shared_b16: text = "st.volatile.shared.b16"; break;
                case z.st_volatile_shared_b32: text = "st.volatile.shared.b32"; break;
                case z.st_volatile_shared_b64: text = "st.volatile.shared.b64"; break;
                case z.st_volatile_shared_u8: text = "st.volatile.shared.u8"; break;
                case z.st_volatile_shared_u16: text = "st.volatile.shared.u16"; break;
                case z.st_volatile_shared_u32: text = "st.volatile.shared.u32"; break;
                case z.st_volatile_shared_u64: text = "st.volatile.shared.u64"; break;
                case z.st_volatile_shared_s8: text = "st.volatile.shared.s8"; break;
                case z.st_volatile_shared_s16: text = "st.volatile.shared.s16"; break;
                case z.st_volatile_shared_s32: text = "st.volatile.shared.s32"; break;
                case z.st_volatile_shared_s64: text = "st.volatile.shared.s64"; break;
                case z.st_volatile_shared_f32: text = "st.volatile.shared.f32"; break;
                case z.st_volatile_shared_f64: text = "st.volatile.shared.f64"; break;
                case z.st_volatile_shared_v2_b8: text = "st.volatile.shared.v2.b8"; break;
                case z.st_volatile_shared_v2_b16: text = "st.volatile.shared.v2.b16"; break;
                case z.st_volatile_shared_v2_b32: text = "st.volatile.shared.v2.b32"; break;
                case z.st_volatile_shared_v2_b64: text = "st.volatile.shared.v2.b64"; break;
                case z.st_volatile_shared_v2_u8: text = "st.volatile.shared.v2.u8"; break;
                case z.st_volatile_shared_v2_u16: text = "st.volatile.shared.v2.u16"; break;
                case z.st_volatile_shared_v2_u32: text = "st.volatile.shared.v2.u32"; break;
                case z.st_volatile_shared_v2_u64: text = "st.volatile.shared.v2.u64"; break;
                case z.st_volatile_shared_v2_s8: text = "st.volatile.shared.v2.s8"; break;
                case z.st_volatile_shared_v2_s16: text = "st.volatile.shared.v2.s16"; break;
                case z.st_volatile_shared_v2_s32: text = "st.volatile.shared.v2.s32"; break;
                case z.st_volatile_shared_v2_s64: text = "st.volatile.shared.v2.s64"; break;
                case z.st_volatile_shared_v2_f32: text = "st.volatile.shared.v2.f32"; break;
                case z.st_volatile_shared_v2_f64: text = "st.volatile.shared.v2.f64"; break;
                case z.st_volatile_shared_v4_b8: text = "st.volatile.shared.v4.b8"; break;
                case z.st_volatile_shared_v4_b16: text = "st.volatile.shared.v4.b16"; break;
                case z.st_volatile_shared_v4_b32: text = "st.volatile.shared.v4.b32"; break;
                case z.st_volatile_shared_v4_b64: text = "st.volatile.shared.v4.b64"; break;
                case z.st_volatile_shared_v4_u8: text = "st.volatile.shared.v4.u8"; break;
                case z.st_volatile_shared_v4_u16: text = "st.volatile.shared.v4.u16"; break;
                case z.st_volatile_shared_v4_u32: text = "st.volatile.shared.v4.u32"; break;
                case z.st_volatile_shared_v4_u64: text = "st.volatile.shared.v4.u64"; break;
                case z.st_volatile_shared_v4_s8: text = "st.volatile.shared.v4.s8"; break;
                case z.st_volatile_shared_v4_s16: text = "st.volatile.shared.v4.s16"; break;
                case z.st_volatile_shared_v4_s32: text = "st.volatile.shared.v4.s32"; break;
                case z.st_volatile_shared_v4_s64: text = "st.volatile.shared.v4.s64"; break;
                case z.st_volatile_shared_v4_f32: text = "st.volatile.shared.v4.f32"; break;
                case z.st_volatile_shared_v4_f64: text = "st.volatile.shared.v4.f64"; break;

                // cvt
                case z.cvt_u8_u8: text = "cvt.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_u8: text = "cvt.sat.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_u16: text = "cvt.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_u16: text = "cvt.sat.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_u32: text = "cvt.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_u32: text = "cvt.sat.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_u64: text = "cvt.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_u64: text = "cvt.sat.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_s8: text = "cvt.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_s8: text = "cvt.sat.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_s16: text = "cvt.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_s16: text = "cvt.sat.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_s32: text = "cvt.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_s32: text = "cvt.sat.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_s64: text = "cvt.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_s64: text = "cvt.sat.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_f16: text = "cvt.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_f16: text = "cvt.sat.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_f32: text = "cvt.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_f32: text = "cvt.sat.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u8_f64: text = "cvt.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u8_f64: text = "cvt.sat.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_u8: text = "cvt.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_u8: text = "cvt.sat.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_u16: text = "cvt.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_u16: text = "cvt.sat.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_u32: text = "cvt.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_u32: text = "cvt.sat.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_u64: text = "cvt.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_u64: text = "cvt.sat.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_s8: text = "cvt.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_s8: text = "cvt.sat.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_s16: text = "cvt.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_s16: text = "cvt.sat.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_s32: text = "cvt.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_s32: text = "cvt.sat.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_s64: text = "cvt.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_s64: text = "cvt.sat.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_f16: text = "cvt.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_f16: text = "cvt.sat.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_f32: text = "cvt.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_f32: text = "cvt.sat.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u16_f64: text = "cvt.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u16_f64: text = "cvt.sat.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_u8: text = "cvt.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_u8: text = "cvt.sat.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_u16: text = "cvt.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_u16: text = "cvt.sat.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_u32: text = "cvt.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_u32: text = "cvt.sat.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_u64: text = "cvt.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_u64: text = "cvt.sat.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_s8: text = "cvt.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_s8: text = "cvt.sat.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_s16: text = "cvt.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_s16: text = "cvt.sat.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_s32: text = "cvt.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_s32: text = "cvt.sat.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_s64: text = "cvt.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_s64: text = "cvt.sat.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_f16: text = "cvt.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_f16: text = "cvt.sat.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_f32: text = "cvt.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_f32: text = "cvt.sat.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u32_f64: text = "cvt.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u32_f64: text = "cvt.sat.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_u8: text = "cvt.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_u8: text = "cvt.sat.u8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_u16: text = "cvt.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_u16: text = "cvt.sat.u8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_u32: text = "cvt.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_u32: text = "cvt.sat.u8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_u64: text = "cvt.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_u64: text = "cvt.sat.u8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_s8: text = "cvt.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_s8: text = "cvt.sat.u8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_s16: text = "cvt.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_s16: text = "cvt.sat.u8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_s32: text = "cvt.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_s32: text = "cvt.sat.u8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_s64: text = "cvt.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_s64: text = "cvt.sat.u8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_f16: text = "cvt.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_f16: text = "cvt.sat.u8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_f32: text = "cvt.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_f32: text = "cvt.sat.u8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_u64_f64: text = "cvt.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_u64_f64: text = "cvt.sat.u8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                //
                case z.cvt_s8_u8: text = "cvt.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_u8: text = "cvt.sat.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_u16: text = "cvt.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_u16: text = "cvt.sat.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_u32: text = "cvt.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_u32: text = "cvt.sat.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_u64: text = "cvt.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_u64: text = "cvt.sat.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_s8: text = "cvt.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_s8: text = "cvt.sat.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_s16: text = "cvt.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_s16: text = "cvt.sat.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_s32: text = "cvt.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_s32: text = "cvt.sat.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_s64: text = "cvt.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_s64: text = "cvt.sat.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_f16: text = "cvt.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_f16: text = "cvt.sat.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_f32: text = "cvt.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_f32: text = "cvt.sat.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s8_f64: text = "cvt.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s8_f64: text = "cvt.sat.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_u8: text = "cvt.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_u8: text = "cvt.sat.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_u16: text = "cvt.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_u16: text = "cvt.sat.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_u32: text = "cvt.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_u32: text = "cvt.sat.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_u64: text = "cvt.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_u64: text = "cvt.sat.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_s8: text = "cvt.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_s8: text = "cvt.sat.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_s16: text = "cvt.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_s16: text = "cvt.sat.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_s32: text = "cvt.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_s32: text = "cvt.sat.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_s64: text = "cvt.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_s64: text = "cvt.sat.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_f16: text = "cvt.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_f16: text = "cvt.sat.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_f32: text = "cvt.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_f32: text = "cvt.sat.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s16_f64: text = "cvt.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s16_f64: text = "cvt.sat.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_u8: text = "cvt.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_u8: text = "cvt.sat.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_u16: text = "cvt.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_u16: text = "cvt.sat.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_u32: text = "cvt.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_u32: text = "cvt.sat.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_u64: text = "cvt.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_u64: text = "cvt.sat.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_s8: text = "cvt.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_s8: text = "cvt.sat.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_s16: text = "cvt.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_s16: text = "cvt.sat.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_s32: text = "cvt.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_s32: text = "cvt.sat.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_s64: text = "cvt.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_s64: text = "cvt.sat.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_f16: text = "cvt.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_f16: text = "cvt.sat.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_f32: text = "cvt.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_f32: text = "cvt.sat.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s32_f64: text = "cvt.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s32_f64: text = "cvt.sat.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_u8: text = "cvt.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_u8: text = "cvt.sat.s8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_u16: text = "cvt.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_u16: text = "cvt.sat.s8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_u32: text = "cvt.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_u32: text = "cvt.sat.s8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_u64: text = "cvt.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_u64: text = "cvt.sat.s8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_s8: text = "cvt.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_s8: text = "cvt.sat.s8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_s16: text = "cvt.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_s16: text = "cvt.sat.s8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_s32: text = "cvt.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_s32: text = "cvt.sat.s8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_s64: text = "cvt.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_s64: text = "cvt.sat.s8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_f16: text = "cvt.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_f16: text = "cvt.sat.s8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_f32: text = "cvt.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_f32: text = "cvt.sat.s8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_s64_f64: text = "cvt.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_s64_f64: text = "cvt.sat.s8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                //
                case z.cvt_f16_u8: text = "cvt.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_u8: text = "cvt.sat.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_u16: text = "cvt.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_u16: text = "cvt.sat.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_u32: text = "cvt.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_u32: text = "cvt.sat.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_u64: text = "cvt.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_u64: text = "cvt.sat.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_s8: text = "cvt.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_s8: text = "cvt.sat.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_s16: text = "cvt.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_s16: text = "cvt.sat.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_s32: text = "cvt.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_s32: text = "cvt.sat.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_s64: text = "cvt.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_s64: text = "cvt.sat.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_f16: text = "cvt.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_f16: text = "cvt.sat.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_f32: text = "cvt.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_f32: text = "cvt.sat.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f16_f64: text = "cvt.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f16_f64: text = "cvt.sat.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_u8: text = "cvt.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_u8: text = "cvt.sat.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_u16: text = "cvt.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_u16: text = "cvt.sat.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_u32: text = "cvt.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_u32: text = "cvt.sat.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_u64: text = "cvt.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_u64: text = "cvt.sat.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_s8: text = "cvt.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_s8: text = "cvt.sat.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_s16: text = "cvt.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_s16: text = "cvt.sat.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_s32: text = "cvt.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_s32: text = "cvt.sat.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_s64: text = "cvt.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_s64: text = "cvt.sat.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_f16: text = "cvt.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_f16: text = "cvt.sat.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_f32: text = "cvt.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_f32: text = "cvt.sat.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f32_f64: text = "cvt.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f32_f64: text = "cvt.sat.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_u8: text = "cvt.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_u8: text = "cvt.sat.f8.u8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_u16: text = "cvt.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_u16: text = "cvt.sat.f8.u16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_u32: text = "cvt.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_u32: text = "cvt.sat.f8.u32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_u64: text = "cvt.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_u64: text = "cvt.sat.f8.u64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_s8: text = "cvt.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_s8: text = "cvt.sat.f8.s8"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_s16: text = "cvt.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_s16: text = "cvt.sat.f8.s16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_s32: text = "cvt.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_s32: text = "cvt.sat.f8.s32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_s64: text = "cvt.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_s64: text = "cvt.sat.f8.s64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_f16: text = "cvt.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_f16: text = "cvt.sat.f8.f16"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_f32: text = "cvt.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_f32: text = "cvt.sat.f8.f32"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_f64_f64: text = "cvt.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                case z.cvt_sat_f64_f64: text = "cvt.sat.f8.f64"; opCode.AdjustText(a.rnd, ref text); break;
                //
                default: throw new InvalidOperationException();
            }
            EmitBasicOpcode(w, instruction, text);
        }
    }
}
